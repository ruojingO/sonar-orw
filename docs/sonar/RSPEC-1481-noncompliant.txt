public int numberOfMinutes(int hours) {
  int seconds = 0;   // Noncompliant: "seconds" is unused
  return hours * 60;
}


public String name(Person p) {
  return switch (p) {
    case User(String name, int age) -> name; // Noncompliant: "age" is unused replace it with the unnamed variable pattern (starting from Java 22)
    default -> throw new IllegalArgumentException();
  };
}


public String type(Person p) {
  return switch (p) {
    case User user -> "user"; // Noncompliant:  "user" is unused replace it with the unnamed variable pattern (starting from Java 22)
    default -> throw new IllegalArgumentException();
  };
}


public int age(Person p) {
  if (p instanceof User(String name, int age)) { // Noncompliant:  "name" is unused replace it with the unnamed variable pattern (starting from Java 22)
    return age;
  }
}


public static int count(int[] elements) {
  int count = 0;
  for (var el : elements) { // Noncompliant:  "el" is unused replace it with the unnamed variable pattern (starting from Java 22)
    count++;
  }
  return count;
}


public void foo() {
  try (var file = Files.createTempFile(directory, "temp", ".txt")) { // Noncompliant:  "file" is unused replace it with the unnamed variable pattern (starting from Java 22)
    System.out.println("file created");
  }
}